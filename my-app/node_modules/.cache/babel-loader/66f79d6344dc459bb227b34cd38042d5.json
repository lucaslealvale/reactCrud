{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Documents\\\\reactAPP\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepButton from '@mui/material/StepButton';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = ['Criar Integração', 'Produto', 'Tipo de integração', 'Mensageria', 'Agendamento', 'Setup', 'Schema', 'Confirmação'];\nexport default function HorizontalNonLinearStepper() {\n  _s();\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState({});\n\n  const totalSteps = () => {\n    return steps.length;\n  };\n\n  const completedSteps = () => {\n    return Object.keys(completed).length;\n  };\n\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps();\n  };\n\n  const handleNext = () => {\n    const newActiveStep = isLastStep() && !allStepsCompleted() ? // It's the last step, but not all steps have been completed,\n    // find the first step that has been completed\n    steps.findIndex((step, i) => !(i in completed)) : activeStep + 1;\n    setActiveStep(newActiveStep);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleStep = step => () => {\n    setActiveStep(step);\n  };\n\n  const handleComplete = () => {\n    const newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n    handleNext();\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setCompleted({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: '50%',\n      marginLeft: \"10%\",\n      marginTop: \"10%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      gutterBottom: true,\n      variant: \"overline\",\n      children: \"Nova integra\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {},\n      children: [/*#__PURE__*/_jsxDEV(Stepper, {\n        nonLinear: true,\n        activeStep: activeStep,\n        children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n          completed: completed[index],\n          children: /*#__PURE__*/_jsxDEV(StepButton, {\n            color: \"inherit\",\n            onClick: handleStep(index),\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: allStepsCompleted() ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 2,\n              mb: 1\n            },\n            children: \"Todos passos completos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'row',\n              pt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flex: '1 1 auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleReset,\n              children: \"Resetar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'row',\n              pt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              disabled: activeStep === 0,\n              onClick: handleBack,\n              sx: {\n                mr: 1\n              },\n              children: \"Anterior\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flex: '1 1 auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleNext,\n              sx: {\n                mr: 1\n              },\n              children: \"Pr\\xF3ximo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), activeStep !== steps.length && (completed[activeStep] ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                display: 'inline-block'\n              },\n              children: [\"Passo \", activeStep + 1, \" completo\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleComplete,\n              children: completedSteps() === totalSteps() - 1 ? 'Finalizar' : 'Completar passo'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HorizontalNonLinearStepper, \"ScfQtMjocTEEPsQJA4wuJiaPwNA=\");\n\n_c = HorizontalNonLinearStepper;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalNonLinearStepper\");","map":{"version":3,"sources":["C:/Users/lucas/Documents/reactAPP/my-app/src/App.js"],"names":["React","Box","Stepper","Step","StepButton","Button","Typography","Card","steps","HorizontalNonLinearStepper","activeStep","setActiveStep","useState","completed","setCompleted","totalSteps","length","completedSteps","Object","keys","isLastStep","allStepsCompleted","handleNext","newActiveStep","findIndex","step","i","handleBack","prevActiveStep","handleStep","handleComplete","newCompleted","handleReset","width","marginLeft","marginTop","map","label","index","mt","mb","display","flexDirection","pt","flex","mr"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepButton from '@mui/material/StepButton';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\n\nconst steps = ['Criar Integração', 'Produto','Tipo de integração','Mensageria', 'Agendamento', 'Setup', 'Schema', 'Confirmação'];\n\nexport default function HorizontalNonLinearStepper() {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState({});\n\n  const totalSteps = () => {\n    return steps.length;\n  };\n\n  const completedSteps = () => {\n    return Object.keys(completed).length;\n  };\n\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps();\n  };\n\n  const handleNext = () => {\n    const newActiveStep =\n      isLastStep() && !allStepsCompleted()\n        ? // It's the last step, but not all steps have been completed,\n          // find the first step that has been completed\n          steps.findIndex((step, i) => !(i in completed))\n        : activeStep + 1;\n    setActiveStep(newActiveStep);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStep = (step) => () => {\n    setActiveStep(step);\n  };\n\n  const handleComplete = () => {\n    const newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n    handleNext();\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setCompleted({});\n  };\n\n  return (\n    <Card sx={{ width: '50%',marginLeft: \"10%\", marginTop: \"10%\" }}>\n    <Typography\n\n            gutterBottom\n            variant=\"overline\"\n          >\n            Nova integração\n          </Typography>\n    <Box sx={{  }}>\n      <Stepper nonLinear activeStep={activeStep}>\n        {steps.map((label, index) => (\n          <Step key={label} completed={completed[index]}>\n            <StepButton color=\"inherit\" onClick={handleStep(index)}>\n              {label}\n            </StepButton>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {allStepsCompleted() ? (\n          <React.Fragment>\n            <Typography sx={{ mt: 2, mb: 1 }}>\n              Todos passos completos\n            </Typography>\n            <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n              <Box sx={{ flex: '1 1 auto' }} />\n              <Button onClick={handleReset}>Resetar</Button>\n            </Box>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            \n            <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n              <Button\n                color=\"inherit\"\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                sx={{ mr: 1 }}\n              >\n                Anterior\n              </Button>\n              <Box sx={{ flex: '1 1 auto' }} />\n              <Button onClick={handleNext} sx={{ mr: 1 }}>\n                Próximo\n              </Button>\n              {activeStep !== steps.length &&\n                (completed[activeStep] ? (\n                  <Typography variant=\"caption\" sx={{ display: 'inline-block' }}>\n                    Passo {activeStep + 1} completo \n                  </Typography>\n                ) : (\n                  <Button onClick={handleComplete}>\n                    {completedSteps() === totalSteps() - 1\n                      ? 'Finalizar'\n                      : 'Completar passo'}\n                  </Button>\n                ))}\n            </Box>\n          </React.Fragment>\n        )}\n      </div>\n    </Box>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}