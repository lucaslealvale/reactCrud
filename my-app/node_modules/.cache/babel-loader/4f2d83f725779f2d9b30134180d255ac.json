{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\reactCrud\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepButton from \"@mui/material/StepButton\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Card from \"@mui/material/Card\";\nimport { CreateIntegration } from './StepperFiles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = [\"Criar Integração\", \"Produto\", \"Tipo de integração\", \"Mensageria\", \"Agendamento\", \"Setup\", \"Schema\", \"Confirmação\"];\nconst forms = [/*#__PURE__*/_jsxDEV(CreateIntegration, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this) // Product,\n// IntegrationType,\n// Message,\n// Schedule,\n// Setup,\n// Schema,\n// Confirmation,\n];\nexport default function HorizontalNonLinearStepper() {\n  _s();\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState({});\n\n  const totalSteps = () => {\n    return steps.length;\n  };\n\n  const completedSteps = () => {\n    return Object.keys(completed).length;\n  };\n\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps();\n  };\n\n  const handleNext = () => {\n    const newActiveStep = isLastStep() && !allStepsCompleted() ? // It's the last step, but not all steps have been completed,\n    // find the first step that has been completed\n    steps.findIndex((step, i) => !(i in completed)) : activeStep + 1;\n    setActiveStep(newActiveStep);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleStep = step => () => {\n    setActiveStep(step);\n  };\n\n  const handleComplete = () => {\n    const newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n    handleNext();\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setCompleted({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: \"50%\",\n      marginLeft: \"10%\",\n      marginTop: \"10%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        mt: 2,\n        mb: 1\n      },\n      children: \"Nova integra\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      align: \"right\",\n      sx: {\n        mt: 2,\n        mb: 1\n      },\n      children: [\"Passo \", activeStep + 1, \" de \", totalSteps(), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {},\n      children: [/*#__PURE__*/_jsxDEV(Stepper, {\n        nonLinear: true,\n        activeStep: activeStep,\n        children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n          completed: completed[index],\n          children: /*#__PURE__*/_jsxDEV(StepButton, {\n            color: \"inherit\",\n            onClick: handleStep(index),\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [forms[activeStep], allStepsCompleted() ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 2,\n              mb: 1\n            },\n            children: \"Todos passos completos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              pt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flex: \"1 1 auto\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleReset,\n              children: \"Resetar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              pt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              disabled: activeStep === 0,\n              onClick: handleBack,\n              sx: {\n                mr: 1\n              },\n              children: \"Anterior\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flex: \"1 1 auto\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleNext,\n              sx: {\n                mr: 1\n              },\n              children: \"Pr\\xF3ximo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), activeStep !== steps.length && (completed[activeStep] ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                display: \"inline-block\"\n              },\n              children: [\"Passo \", activeStep + 1, \" completo\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleComplete,\n              children: completedSteps() === totalSteps() - 1 ? \"Finalizar\" : \"Completar passo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HorizontalNonLinearStepper, \"ScfQtMjocTEEPsQJA4wuJiaPwNA=\");\n\n_c = HorizontalNonLinearStepper;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalNonLinearStepper\");","map":{"version":3,"sources":["C:/workspace/reactCrud/my-app/src/App.js"],"names":["React","Box","Stepper","Step","StepButton","Button","Typography","Card","CreateIntegration","steps","forms","HorizontalNonLinearStepper","activeStep","setActiveStep","useState","completed","setCompleted","totalSteps","length","completedSteps","Object","keys","isLastStep","allStepsCompleted","handleNext","newActiveStep","findIndex","step","i","handleBack","prevActiveStep","handleStep","handleComplete","newCompleted","handleReset","width","marginLeft","marginTop","mt","mb","map","label","index","display","flexDirection","pt","flex","mr"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stepper from \"@mui/material/Stepper\";\r\nimport Step from \"@mui/material/Step\";\r\nimport StepButton from \"@mui/material/StepButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { CreateIntegration, } from './StepperFiles';\r\nconst steps = [\r\n  \"Criar Integração\",\r\n  \"Produto\",\r\n  \"Tipo de integração\",\r\n  \"Mensageria\",\r\n  \"Agendamento\",\r\n  \"Setup\",\r\n  \"Schema\",\r\n  \"Confirmação\",\r\n];\r\nconst forms = [\r\n  <CreateIntegration />,\r\n  // Product,\r\n  // IntegrationType,\r\n  // Message,\r\n  // Schedule,\r\n  // Setup,\r\n  // Schema,\r\n  // Confirmation,\r\n];\r\n\r\n\r\nexport default function HorizontalNonLinearStepper() {\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState({});\r\n\r\n  const totalSteps = () => {\r\n    return steps.length;\r\n  };\r\n\r\n  const completedSteps = () => {\r\n    return Object.keys(completed).length;\r\n  };\r\n\r\n  const isLastStep = () => {\r\n    return activeStep === totalSteps() - 1;\r\n  };\r\n\r\n  const allStepsCompleted = () => {\r\n    return completedSteps() === totalSteps();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? // It's the last step, but not all steps have been completed,\r\n          // find the first step that has been completed\r\n          steps.findIndex((step, i) => !(i in completed))\r\n        : activeStep + 1;\r\n    setActiveStep(newActiveStep);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStep = (step) => () => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    const newCompleted = completed;\r\n    newCompleted[activeStep] = true;\r\n    setCompleted(newCompleted);\r\n    handleNext();\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n    setCompleted({});\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ width: \"50%\", marginLeft: \"10%\", marginTop: \"10%\" }}>\r\n      <Typography sx={{ mt: 2, mb: 1 }}>Nova integração</Typography>\r\n      <Typography align=\"right\" sx={{ mt: 2, mb: 1 }}>\r\n        Passo {activeStep + 1} de {totalSteps()}{\" \"}\r\n      </Typography>\r\n      <Box sx={{}}>\r\n        <Stepper nonLinear activeStep={activeStep}>\r\n          {steps.map((label, index) => (\r\n            <Step key={label} completed={completed[index]}>\r\n              <StepButton color=\"inherit\" onClick={handleStep(index)}>\r\n                {label}\r\n              </StepButton>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n        <div>\r\n        {forms[activeStep]}\r\n          {allStepsCompleted() ? (\r\n            <React.Fragment>\r\n              <Typography sx={{ mt: 2, mb: 1 }}>\r\n                Todos passos completos\r\n              </Typography>\r\n              <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\r\n                <Box sx={{ flex: \"1 1 auto\" }} />\r\n                <Button onClick={handleReset}>Resetar</Button>\r\n              </Box>\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\r\n                <Button\r\n                  color=\"inherit\"\r\n                  disabled={activeStep === 0}\r\n                  onClick={handleBack}\r\n                  sx={{ mr: 1 }}\r\n                >\r\n                  Anterior\r\n                </Button>\r\n                <Box sx={{ flex: \"1 1 auto\" }} />\r\n                <Button onClick={handleNext} sx={{ mr: 1 }}>\r\n                  Próximo\r\n                </Button>\r\n                {activeStep !== steps.length &&\r\n                  (completed[activeStep] ? (\r\n                    <Typography\r\n                      variant=\"caption\"\r\n                      sx={{ display: \"inline-block\" }}\r\n                    >\r\n                      Passo {activeStep + 1} completo\r\n                    </Typography>\r\n                  ) : (\r\n                    <Button onClick={handleComplete}>\r\n                      {completedSteps() === totalSteps() - 1\r\n                        ? \"Finalizar\"\r\n                        : \"Completar passo\"}\r\n                    </Button>\r\n                  ))}\r\n              </Box>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}